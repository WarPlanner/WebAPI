// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models.Context;

#nullable disable

namespace Models.Migrations
{
    [DbContext(typeof(WarPlannerContext))]
    partial class WarPlannerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Calendar", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.Property<decimal?>("ChannelId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MessageId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.HasKey("GuildId");

                    b.ToTable("Calendars");
                });

            modelBuilder.Entity("Models.Clan", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.Property<string>("Tag")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GuildId", "Tag");

                    b.ToTable("Clans");
                });

            modelBuilder.Entity("Models.Competition", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.Property<decimal>("CategoryId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.Property<string>("MainClan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ResultId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.Property<string>("SecondClan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GuildId", "CategoryId");

                    b.ToTable("Competitions");
                });

            modelBuilder.Entity("Models.Guild", b =>
                {
                    b.Property<decimal>("Id")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("Language")
                        .HasColumnType("bigint");

                    b.Property<long>("MinThLevel")
                        .HasColumnType("bigint");

                    b.Property<long>("PremiumLevel")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("Models.Player", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.Property<string>("Tag")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("DiscordId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.HasKey("GuildId", "Tag");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Models.PlayerStatistic", b =>
                {
                    b.Property<decimal>("DiscordId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.Property<string>("ClanTag")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset>("WarDateStart")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("AttackOrder")
                        .HasColumnType("bigint");

                    b.Property<long>("Duration")
                        .HasColumnType("bigint");

                    b.Property<decimal>("GuildId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.Property<long>("Percentage")
                        .HasColumnType("bigint");

                    b.Property<string>("PlayerTag")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("Stars")
                        .HasColumnType("bigint");

                    b.Property<long>("StatisticAction")
                        .HasColumnType("bigint");

                    b.Property<long>("StatisticType")
                        .HasColumnType("bigint");

                    b.Property<long>("WarType")
                        .HasColumnType("bigint");

                    b.HasKey("DiscordId", "ClanTag", "WarDateStart", "AttackOrder");

                    b.HasIndex("GuildId");

                    b.ToTable("PlayerStatistics");
                });

            modelBuilder.Entity("Models.Role", b =>
                {
                    b.Property<decimal>("RoleId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.Property<long>("Type")
                        .HasColumnType("bigint");

                    b.Property<decimal>("GuildId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.HasKey("RoleId", "Type");

                    b.HasIndex("GuildId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Models.Time", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.Property<long>("Action")
                        .HasColumnType("bigint");

                    b.Property<string>("Additional")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("Interval")
                        .HasColumnType("bigint");

                    b.Property<string>("Optional")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuildId", "Action", "Additional");

                    b.ToTable("Times");
                });

            modelBuilder.Entity("Models.WarStatistic", b =>
                {
                    b.Property<DateTimeOffset>("DateStart")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ClanTag")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("AttackAvgDuration")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("AttackPercent")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<long>("AttackStars")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("CompetitionCategoryId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.Property<decimal>("DefenseAvgDuration")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("DefensePercent")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<long>("DefenseStars")
                        .HasColumnType("bigint");

                    b.Property<decimal>("GuildId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.Property<string>("OpponentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Result")
                        .HasColumnType("bigint");

                    b.Property<long>("WarType")
                        .HasColumnType("bigint");

                    b.HasKey("DateStart", "ClanTag");

                    b.HasIndex("GuildId");

                    b.ToTable("WarStatistics");
                });

            modelBuilder.Entity("Models.Calendar", b =>
                {
                    b.HasOne("Models.Guild", "Guild")
                        .WithOne("Calendar")
                        .HasForeignKey("Models.Calendar", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("Models.Clan", b =>
                {
                    b.HasOne("Models.Guild", "Guild")
                        .WithMany("Clans")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("Models.Competition", b =>
                {
                    b.HasOne("Models.Guild", "Guild")
                        .WithMany("Competitions")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("Models.Player", b =>
                {
                    b.HasOne("Models.Guild", "Guild")
                        .WithMany("Players")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("Models.PlayerStatistic", b =>
                {
                    b.HasOne("Models.Guild", "Guild")
                        .WithMany("PlayerStatistics")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("Models.Role", b =>
                {
                    b.HasOne("Models.Guild", "Guild")
                        .WithMany("Roles")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("Models.Time", b =>
                {
                    b.HasOne("Models.Guild", "Guild")
                        .WithMany("Times")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("Models.WarStatistic", b =>
                {
                    b.HasOne("Models.Guild", "Guild")
                        .WithMany("WarStatistics")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("Models.Guild", b =>
                {
                    b.Navigation("Calendar");

                    b.Navigation("Clans");

                    b.Navigation("Competitions");

                    b.Navigation("PlayerStatistics");

                    b.Navigation("Players");

                    b.Navigation("Roles");

                    b.Navigation("Times");

                    b.Navigation("WarStatistics");
                });
#pragma warning restore 612, 618
        }
    }
}
